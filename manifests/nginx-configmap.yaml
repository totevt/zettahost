{
  "kind": "ConfigMap",
  "apiVersion": "v1",
  "metadata": {
    "name": "default.conf.cm",
    "namespace": "www",
    "selfLink": "/api/v1/namespaces/www/configmaps/default.conf.cm",
    "uid": "0fef30a0-fb72-4b37-8cc3-7b47191d66e2",
    "resourceVersion": "31814793",
    "creationTimestamp": "2020-02-18T11:58:38Z"
  },
  "data": {
    "default.conf": "##\n# You should look at the following URL's in order to grasp a solid understanding\n# of Nginx configuration files in order to fully unleash the power of Nginx.\n# http://wiki.nginx.org/Pitfalls\n# http://wiki.nginx.org/QuickStart\n# http://wiki.nginx.org/Configuration\n#\n# Generally, you will want to move this file somewhere, and start with a clean\n# file but keep this around for reference. Or just disable in sites-enabled.\n#\n# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.\n##\n\n# Default server configuration\n#\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server;\n\n        # SSL configuration\n        #\n        # listen 443 ssl default_server;\n        # listen [::]:443 ssl default_server;\n        #\n        # Note: You should disable gzip for SSL traffic.\n        # See: https://bugs.debian.org/773332\n        #\n        # Read up on ssl_ciphers to ensure a secure configuration.\n        # See: https://bugs.debian.org/765782\n        #\n        # Self signed certs generated by the ssl-cert package\n        # Don't use them in a production server!\n        #\n        # include snippets/snakeoil.conf;\n\n        root /var/www/html;\n\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html;\n\n        server_name _;\n\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n            # proxy_pass http://localhost:8080;\n            # proxy_http_version 1.1;\n            # proxy_set_header Upgrade $http_upgrade;\n            # proxy_set_header Connection 'upgrade';\n            # proxy_set_header Host $host;\n            # proxy_cache_bypass $http_upgrade;\n        }\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #       include snippets/fastcgi-php.conf;\n        #\n        #       # With php7.0-cgi alone:\n        #       fastcgi_pass 127.0.0.1:9000;\n        #       # With php7.0-fpm:\n        #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #       deny all;\n        #}\n}\n\n\n# Virtual Host configuration for example.com\n#\n# You can move that to a different file under sites-available/ and symlink that\n# to sites-enabled/ to enable it.\n#\n#server {\n#       listen 80;\n#       listen [::]:80;\n#\n#       server_name example.com;\n#\n#       root /var/www/example.com;\n#       index index.html;\n#\n#       location / {\n#               try_files $uri $uri/ =404;\n#       }\n#}\n"
  }
}
